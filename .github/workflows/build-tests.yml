name: Build-Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake
        sudo apt-get install -y gcovr
        sudo apt-get install -y libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TEST_SUITE=TRUE -DENABLE_TEST_COVERAGE=TRUE

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j

    - name: Run Unit Tests
      run: cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Collect Coverage Files
      run: |
        find build -iname "*.gcda" -or -iname "*.gcno" -exec cp {} . \;
        gcovr . --exclude-unreachable-branches --exclude-throw-branches --xml --output ./coverage.xml --exclude tests/
      
    - name: Upload Coverage Data
      uses: codecov/codecov-action@v2
      with:
        path: coverage.xml

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TEST_SUITE=TRUE

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j

    - name: Run Unit Tests
      run: cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  build-web:
    container: emscripten/emsdk
    runs-on: ubuntu-22.04

    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake
        sudo apt-get install -y libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure CMake
      run: emcmake cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TEST_SUITE=TRUE

    - name: Build
      run: cmake --build ${{github.workspace}}/build  --config ${{env.BUILD_TYPE}} -j

    - name: Run Unit Tests
      run: cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} --output-on-failure
