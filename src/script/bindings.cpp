/*
** EPITECH PROJECT, 2022
** Bomberman: Global Offensive
** File description:
** Generated File
*/

/// @file
/// @internal
///
/// MuJS Bindings generated by 'generate_bindings.py'
/// DO NOT EDIT!
///
/// Available groups:
/// - common (4 functions)

#ifndef __EMSCRIPTEN__
    #include "script/JsException.hpp"
    #include "script/script.hpp"

void common_callMeBack(bmjs::Function<bmjs::Number, bmjs::Number> callback);
bmjs::Number common_getCVar(bmjs::String name);
void common_log(bmjs::String message);
bmjs::Number common_setCVar(bmjs::String name, bmjs::Number value);

extern "C"
{
    static void common_callMeBack_mujs(js_State *state)
    {
        js_copy(state, 1);
        js_setregistry(state, "common_callMeBack_callback");
        bmjs::Function<bmjs::Number, bmjs::Number> callback = [state](bmjs::Number callback_param_0) {
            js_getregistry(state, "common_callMeBack_callback");
            js_pushundefined(state);
            js_pushnumber(state, callback_param_0);

            if (js_pcall(state, 1)) {
                bmjs::JsException error(js_tostring(state, -1));
                js_pop(state, 1);
                throw error;
            }

            bmjs::Number result = js_tonumber(state, -1);
            js_pop(state, 1);
            return result;
        };

        ::common_callMeBack(callback);
        js_pushundefined(state);
    }

    static void common_getCVar_mujs(js_State *state)
    {
        bmjs::String name = js_tostring(state, 1);

        bmjs::Number result = ::common_getCVar(name);
        js_pushnumber(state, result);
    }

    static void common_log_mujs(js_State *state)
    {
        bmjs::String message = js_tostring(state, 1);

        ::common_log(message);
        js_pushundefined(state);
    }

    static void common_setCVar_mujs(js_State *state)
    {
        bmjs::String name = js_tostring(state, 1);
        bmjs::Number value = js_tonumber(state, 2);

        bmjs::Number result = ::common_setCVar(name, value);
        js_pushnumber(state, result);
    }
}

namespace bmjs
{
    /// Registers the functions in the common group.
    static void registerMuJSBindings_common(js_State *state)
    {
        js_newobject(state);

        js_newcfunction(state, &::common_callMeBack_mujs, "callMeBack", 1);
        js_setproperty(state, -2, "callMeBack");

        js_newcfunction(state, &::common_getCVar_mujs, "getCVar", 1);
        js_setproperty(state, -2, "getCVar");

        js_newcfunction(state, &::common_log_mujs, "log", 1);
        js_setproperty(state, -2, "log");

        js_newcfunction(state, &::common_setCVar_mujs, "setCVar", 2);
        js_setproperty(state, -2, "setCVar");

        js_setproperty(state, -2, "common");
    }

    /// Registers the JS bindings in the 'bm' global object.
    void registerMuJSBindings(js_State *state)
    {
        js_newobject(state);

        registerMuJSBindings_common(state);

        js_setglobal(state, "bm");
    }
} // namespace bmjs

#endif // !defined(__EMSCRIPTEN__)
